From: Michael R. Crusoe <michael.crusoe@gmail.com>
Subject: Spelling fixes
--- a/c++/include/objtools/alnmgr/seqids_extractor.hpp
+++ b/c++/include/objtools/alnmgr/seqids_extractor.hpp
@@ -232,7 +232,7 @@
                         else if (*id_vec[i] != *id) {
                             string err("Inconsistent Seq-ids found in seg ");
                             err += NStr::NumericToString(i) +
-                                ".  Excpected " + id_vec[i]->AsString() +
+                                ".  Expected " + id_vec[i]->AsString() +
                                 ", encountered " + id->AsString() + ".";
                             NCBI_THROW(CAlnException, eInvalidSeqId, err);
                         }
--- a/c++/src/algo/blast/api/blast_setup_cxx.cpp
+++ b/c++/src/algo/blast/api/blast_setup_cxx.cpp
@@ -784,7 +784,7 @@
         		if(warning != kEmptyStr){
         			warning += ": ";
         		}
-        		warning += "Subject sequence contians no data";
+        		warning += "Subject sequence contains no data";
         		ERR_POST(Warning << warning);
         		continue;
         	}
--- a/c++/src/algo/winmask/seq_masker_ostat_factory.cpp
+++ b/c++/src/algo/winmask/seq_masker_ostat_factory.cpp
@@ -75,7 +75,7 @@
         }
         else NCBI_THROW( CSeqMaskerOstatFactoryException,
                          eBadName,
-                         "unkown unit counts format" );
+                         "unknown unit counts format" );
     }
     catch( CException & e ) {
         NCBI_RETHROW( e, CSeqMaskerOstatFactoryException, eCreateFail,
@@ -113,7 +113,7 @@
         }
         else NCBI_THROW( CSeqMaskerOstatFactoryException,
                          eBadName,
-                         "unkown unit counts format" );
+                         "unknown unit counts format" );
     }
     catch( CException & e ) {
         NCBI_RETHROW( e, CSeqMaskerOstatFactoryException, eCreateFail,
--- a/c++/src/app/blastdb/blastdbcheck.cpp
+++ b/c++/src/app/blastdb/blastdbcheck.cpp
@@ -232,7 +232,7 @@
          "Require that all sequences in the database have taxid set.");
 
     arg_desc->AddFlag
-        ("cdd_delta", "Do aditional tests for a CDD database for DELTA-BLAST");
+        ("cdd_delta", "Do additional tests for a CDD database for DELTA-BLAST");
 
     // Setup arg.descriptions for this application
     SetupArgDescriptions(arg_desc.release());
--- a/c++/src/app/blastdb/makeprofiledb.cpp
+++ b/c++/src/app/blastdb/makeprofiledb.cpp
@@ -546,13 +546,13 @@
 
 		if(!pssm.IsSetQuery() || (0 == pssm.GetQueryLength()))
 		{
-			string err = filename + " contians no bioseq data";
+			string err = filename + " contains no bioseq data";
 			NCBI_THROW(CInputException, eInvalidInput,  err);
 		}
 
 		if(!pssm.IsSetNumRows() || !pssm.IsSetNumColumns())
 		{
-			string err = filename + " contians no info on num of columns or num of rows";
+			string err = filename + " contains no info on num of columns or num of rows";
 			NCBI_THROW(CInputException, eInvalidInput,  err);
 		}
 
@@ -605,13 +605,13 @@
 
 		if(sm_invalid == sm)
 		{
-			string err = filename + " contians no pssm or residue frequencies";
+			string err = filename + " contains no pssm or residue frequencies";
 			NCBI_THROW(CInputException, eInvalidInput,  err);
 		}
 	}
 	else
 	{
-		string err = filename + " contians no scoremat";
+		string err = filename + " contains no scoremat";
 		NCBI_THROW(CInputException, eInvalidInput,  err);
 	}
 
@@ -1563,7 +1563,7 @@
     if( !x_ValidateCd(freqs, obsr, BLASTAA_SIZE) && m_ExcludeInvalid)
     {
     	*m_LogFile << filename +
-    			" was excluded: it conatins an invalid CD \n";
+    			" was excluded: it contains an invalid CD \n";
     	return false;
     }
 
--- a/c++/src/connect/ncbi_lbos.c
+++ b/c++/src/connect/ncbi_lbos.c
@@ -951,7 +951,7 @@
                                            sizeof(char) * (strlen(buf) + 1))) ) 
     {
         CORE_LOG(eLOG_Warning, "s_LBOS_UrlReadAll: Buffer shrink error, using "
-                               "original stirng");
+                               "original string");
     }  else  {
         buf = realloc_result;
     }
--- a/c++/src/objects/seqalign/Dense_seg.cpp
+++ b/c++/src/objects/seqalign/Dense_seg.cpp
@@ -988,7 +988,7 @@
             if (loc_plus != (seq_loc_i.GetStrand() != eNa_strand_minus)) {
                 NCBI_THROW(CSeqalignException, eInvalidInputData,
                            "CDense_seg::RemapToLoc():"
-                           " The strand should be the same accross"
+                           " The strand should be the same across"
                            " the input seq-loc");
             }
         }
--- a/c++/src/objects/seqalign/Seq_align.cpp
+++ b/c++/src/objects/seqalign/Seq_align.cpp
@@ -872,7 +872,7 @@
         if (dim != ss.GetDim()  ||  row != dim) {
             NCBI_THROW(CSeqalignException, eInvalidInputAlignment,
                        "CreateDensegFromStdseg(): "
-                       "Inconsistent dimentions!");
+                       "Inconsistent dimensions!");
         }
 
         if (widths_determined[seg]) {
--- a/c++/src/objects/seqfeat/institution_codes.inc
+++ b/c++/src/objects/seqfeat/institution_codes.inc
@@ -687,7 +687,7 @@
 "BPS\ts\tCalifornia Department of Food and Agriculture\t\t\t",
 "BPU\ts\tEoetvoes Lorand University, Department of Plant Taxonomy and Ecology\t\t\t",
 "BR<BEL>\ts\tBotanic Garden Meise\t\t\t",
-"BR<BRA>\tc\tJohanna Dobereiner Biological Resouce Center (CRB-JD)\t\t\t",
+"BR<BRA>\tc\tJohanna Dobereiner Biological Resource Center (CRB-JD)\t\t\t",
 "BRA\ts\tSlovak National Museum, Botany Department\t\t\t",
 "BRAD\ts\tUniversity of Bradford, Biology Department\t\t\t",
 "BRBA\ts\tUniversidade Federal do Oeste da Bahia\t\t\t",
--- a/c++/src/objects/seqfeat/institution_codes.txt
+++ b/c++/src/objects/seqfeat/institution_codes.txt
@@ -654,7 +654,7 @@
 BPS	s	California Department of Food and Agriculture			
 BPU	s	Eoetvoes Lorand University, Department of Plant Taxonomy and Ecology			
 BR<BEL>	s	Botanic Garden Meise			
-BR<BRA>	c	Johanna Dobereiner Biological Resouce Center (CRB-JD)			
+BR<BRA>	c	Johanna Dobereiner Biological Resource Center (CRB-JD)			
 BRA	s	Slovak National Museum, Botany Department			
 BRAD	s	University of Bradford, Biology Department			
 BRBA	s	Universidade Federal do Oeste da Bahia			
--- a/c++/src/objmgr/util/sequence.cpp
+++ b/c++/src/objmgr/util/sequence.cpp
@@ -274,7 +274,7 @@
     if ( best_feats.empty() ) {
         NCBI_THROW_FMT(CObjMgrException, eFindFailed,
                        "GetProteinName("<<GetId(seq, eGetId_Best)<<"): "
-                       "the sequence does't have prot feature");
+                       "the sequence doesn't have prot feature");
     }
     if ( best_feats.size() > 1 ) {
         NCBI_THROW_FMT(CObjMgrException, eFindConflict,
--- a/c++/src/objtools/align_format/taxFormat.cpp
+++ b/c++/src/objtools/align_format/taxFormat.cpp
@@ -588,7 +588,7 @@
             }            
         }
         if (!tax_load_ok) {
-            NCBI_THROW(CException, eUnknown,"Taxonomic load was not successfull.");
+            NCBI_THROW(CException, eUnknown,"Taxonomic load was not successful.");
         }
         m_TaxTreeLoaded = true;
             
--- a/c++/src/objtools/format/flat_file_config.cpp
+++ b/c++/src/objtools/format/flat_file_config.cpp
@@ -623,7 +623,7 @@
 
          // from
          arg_desc->AddOptionalKey("from", "From",
-                                  "Begining of shown range", CArgDescriptions::eInteger);
+                                  "Beginning of shown range", CArgDescriptions::eInteger);
 
          // to
          arg_desc->AddOptionalKey("to", "To",
--- a/c++/src/objtools/readers/agp_converter.cpp
+++ b/c++/src/objtools/readers/agp_converter.cpp
@@ -728,7 +728,7 @@
         submit_block_writer.WriteObject(m_pSubmitBlock.GetPointer(), m_pSubmitBlock->GetThisTypeInfo());
         submit_block_writer.Flush();
         seq_sub_header_strm << "," << endl;
-        seq_sub_header_strm << "data entrys {" << endl;
+        seq_sub_header_strm << "data entries {" << endl;
 
         out_sObjectOpeningString = seq_sub_header_strm.str();
         out_sObjectClosingString = "} }" + out_sObjectClosingString;
--- a/c++/src/objtools/readers/agp_util.cpp
+++ b/c++/src/objtools/readers/agp_util.cpp
@@ -67,7 +67,7 @@
 
     "object_beg != previous object_end + 1",
     "no valid AGP lines",
-    "consequtive gaps lines with the same type and linkage",
+    "consecutive gaps lines with the same type and linkage",
     "in \"Scaffold from component\" file, invalid scaffold-breaking gap",
     "in \"Chromosome from scaffold\" file, invalid \"within-scaffold\" gap",
 
@@ -87,7 +87,7 @@
     // Content Warnings
     "gap at the end of object (OK if X is the circular chromosome/plasmid)",
     "gap at the beginning of object ",
-    "two consequtive gap lines (e.g. a gap at the end of "
+    "two consecutive gap lines (e.g. a gap at the end of "
         "a scaffold, two non scaffold-breaking gaps, ...)",
     "no components in object",
     "the span overlaps a previous span for this component",
--- a/c++/src/objtools/readers/agp_validate_reader.cpp
+++ b/c++/src/objtools/readers/agp_validate_reader.cpp
@@ -300,7 +300,7 @@
       int prev_comp_file=spans.rbegin()->file_num;
       int prev_comp_line=spans.rbegin()->line_num;
       if(prev_comp_file < m_last_scaf_start_file || prev_comp_line < m_last_scaf_start_line) {
-        sameComId_otherScaf="; previous occurance at ";
+        sameComId_otherScaf="; previous occurrence at ";
         if(prev_comp_file && prev_comp_file!=m_AgpErr->GetFileNum()) {
           sameComId_otherScaf += m_AgpErr->GetFile(prev_comp_file);
           sameComId_otherScaf += ":";
--- a/c++/src/util/compress/api/compress.cpp
+++ b/c++/src/util/compress/api/compress.cpp
@@ -160,7 +160,7 @@
     while ( (nread = src_file.Read(buf.get(), buf_size)) > 0 ) {
         os.write(buf.get(), nread);
         if ( !os.good() ) {
-            SetError(-1, "Error writing to ouput file");
+            SetError(-1, "Error writing to output file");
             return false;
         }
     }
